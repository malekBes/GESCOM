/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Config.Bank;

import Donnee.*;
import Article.*;
import Client.Client;
import Client.ClientDao;
import Commercial.CommercialDao;
import Home.App;
import Reglement.ReglementFormDetail;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.beans.PropertyVetoException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Mlek
 */
public class DepotConsultationForm extends javax.swing.JInternalFrame {

    HashMap<String, String> familleHashMap;
    HashMap<String, String> sousFamilleHashMap;
    HashMap<String, String> fournisseurHashMap;
    HashMap<String, String> marqueHashMap;
    HashMap<String, String> depotHashMap;

    ArticleDao daoArticle = new ArticleDao();
    ArrayList<String> listNomSte;

    /**
     * Creates new form ArticleForm
     */
    public DepotConsultationForm() {
         initComponents();
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        jPanel4.setVisible(false);
        setComboBox();
        SearchStockArticle();
        listNomSte = daoArticle.afficherArticle();
        this.addInternalFrameListener(new InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent e) {
                int reply = JOptionPane.showConfirmDialog(null, "Voulez vous vraiment quitter ?", "Quitter", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    dispose();
                }
            }
        });
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

    }

    public void SearchStockArticle() {
        try {
            Article r = setArticleFromEditText();

            StockDAO stockDAO = new StockDAO();
            stockDAO.afficherDepot(Table_Article, r.getId_depot(), "", "", "",
                    "", "");

            //setHeaders();
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, "Error in HistoriqueDevisFrom/SearchDevis : \n" + e);
        } finally {
            try {

                System.out.println("disconnected");
            } catch (Exception ex) {
                Logger.getLogger(DepotConsultationForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void resetComboBox() {

        /* ComboBoxSous_famille.removeAllItems();
        ComboBoxSous_famille.addItem("-");
        ComboBox_famille.removeAllItems();
        ComboBox_famille.addItem("-");

        ComboBox_marque.removeAllItems();
        ComboBox_marque.addItem("-");*/
    }

    public void setComboBox() {
        resetComboBox();
        depotComboBox();
       
        /*  familleComboBox();
        marqueComboBox();*/
    }

    public void depotComboBox() {
        ArticleDao article = new ArticleDao();
        depotHashMap = article.listDepot(ComboBox_Depot);
    }

   

    /* public void familleComboBox() {
        ArticleDao article = new ArticleDao();
        familleHashMap = article.listfamille(ComboBox_famille);
    }

    public void sousFamilleComboBox(String id) {
        ArticleDao article = new ArticleDao();
        sousFamilleHashMap = article.listSousFamille(ComboBoxSous_famille, id);
    }

    public void marqueComboBox() {
        ArticleDao article = new ArticleDao();
        marqueHashMap = article.listMarque(ComboBox_marque);
    }

   
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        txt_searchArticle = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_Article = new javax.swing.JTable();
        ComboBox_Depot = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setResizable(true);
        setTitle("Consutation Dépot");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recherche", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 51, 153))); // NOI18N

        txt_searchArticle.setBackground(new java.awt.Color(153, 204, 255));
        txt_searchArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchArticleActionPerformed(evt);
            }
        });
        txt_searchArticle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchArticleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchArticleKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(165, 165, 165))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_searchArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txt_searchArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15))
        );

        Table_Article.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_Article.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_ArticleMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Table_ArticleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(Table_Article);

        ComboBox_Depot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBox_Depot.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_DepotItemStateChanged(evt);
            }
        });
        ComboBox_Depot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_DepotActionPerformed(evt);
            }
        });

        jLabel6.setText("Dépot");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(ComboBox_Depot, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_Depot, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addGap(86, 86, 86))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_searchArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchArticleActionPerformed

    }//GEN-LAST:event_txt_searchArticleActionPerformed
    public void setFieldsByName(String table_click) {

        Article c = new Article();
        c = daoArticle.getArticleByName(table_click);
        if (c.getRef() == "0") {
            JOptionPane.showMessageDialog(null, " Verifier le Nom de la société ");
            // clearTxt();u
        } else {

            /* txt_ref.setText(c.getRef().toString());

            if (!c.getId_famille().isEmpty()) {
                String ss = daoArticle.getNameItemById("famille_produit", "famille", "id", c.getId_famille());

                ComboBox_famille.setSelectedItem(ss);
            }

            if (!c.getId_sous_famille().isEmpty()) {
                String ss = daoArticle.getNameItemById("sous_famille", "sous_famille", "id", c.getId_sous_famille());

                ComboBoxSous_famille.setSelectedItem(ss);
            }
            if (!c.getMarque().isEmpty()) {
                ComboBox_marque.setSelectedIndex(Integer.valueOf(c.getMarque()));
            }*/
        }
    }


    private void txt_searchArticleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchArticleKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == evt.VK_ENTER) {
            setFieldsByName(txt_searchArticle.getText());

        }
    }//GEN-LAST:event_txt_searchArticleKeyPressed

    private void txt_searchArticleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchArticleKeyReleased
        //  daoArticle.searchClient(client_table, txt_search.getText());

        if (evt.getKeyCode() == evt.VK_BACK_SPACE || evt.getKeyCode() == evt.VK_DELETE) {

        } else {
            String to_check = txt_searchArticle.getText().toLowerCase();
            int to_check_len = to_check.length();
            for (String data : listNomSte) {
                data = data.toLowerCase();
                String check_from_data = "";
                for (int i = 0; i < to_check_len; i++) {
                    if (to_check_len <= data.length()) {
                        check_from_data = check_from_data + data.charAt(i);
                    }
                }
                //System.out.print(check_from_data);
                if (check_from_data.contains(to_check)) {
                    //System.out.print("Found");
                    txt_searchArticle.setText(data);
                    txt_searchArticle.setSelectionStart(to_check_len);
                    txt_searchArticle.setSelectionEnd(data.length());
                    break;
                }
            }
        }
    }//GEN-LAST:event_txt_searchArticleKeyReleased

    private void ComboBox_DepotItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_DepotItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_DepotItemStateChanged

    private void ComboBox_DepotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_DepotActionPerformed
        SearchStockArticle();
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_DepotActionPerformed

    private void Table_ArticleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_ArticleMouseClicked
        // TODO add your handling code here:

        // 6 remise 7 tvA
    }//GEN-LAST:event_Table_ArticleMouseClicked

    private void Table_ArticleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_ArticleMousePressed
        // TODO add your handling code here:
        int row = Table_Article.getSelectedRow();
        String qte = Table_Article.getModel().getValueAt(row, 2).toString();

//        txt_stock.setText(qte);

    }//GEN-LAST:event_Table_ArticleMousePressed
    StockDAO stockDAO = new StockDAO();
    Boolean isExcep = false;
    JFrame frameListeClient;
    JButton jbtValider;
    JButton jbtValiderarticle;

    private Article setArticleFromEditText() {
        Article r = new Article();

        try {
            /*   if (!txt_ref.getText().isEmpty()) {
                r.setRef(txt_ref.getText());
            } else {
                r.setRef("");

            }

            if (!txt_desgination.getText().isEmpty()) {
                r.setDesignation(txt_desgination.getText());
            } else {
                r.setDesignation("");

            }*/
            String depot = ComboBox_Depot.getSelectedItem().toString();
            if (!depot.equals("-")) {
                String ss = daoArticle.getNameItemById("depot", "id", "nom", depot);
                r.setId_depot(ss);
            } else {

                r.setId_depot("");

            }
            /*  String marque = ComboBox_marque.getSelectedItem().toString();
            if (!marque.equals("-")) {
                String ss = daoArticle.getNameItemById("marque_produit", "id", "marque", marque);
                r.setMarque(ss);
            } else {

                r.setMarque("");

            }
             */
 /*    String fm = ComboBox_famille.getSelectedItem().toString();

            if (!fm.equals("-")) {
                String ss = daoArticle.getNameItemById("famille_produit", "id", "famille", fm);
                r.setId_famille(ss);
            } else {
                r.setId_famille("");

            }

            String sfm = ComboBoxSous_famille.getSelectedItem().toString();
            if (!sfm.equals("-")) {
                String ss = daoArticle.getNameItemById("sous_famille", "id", "sous_famille", sfm);
                r.setId_sous_famille(ss);
            } else {
                r.setId_sous_famille("");

            }*/

        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println(e);

        }

        return r;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox_Depot;
    private javax.swing.JTable Table_Article;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_searchArticle;
    // End of variables declaration//GEN-END:variables

    private void clearTxt() {
        /*     txt_ref.setText("");

        txt_desgination.setText("");

        //String s = ComboBox_four.getSelectedItem().toString();
        ComboBox_famille.setSelectedItem("-");

        ComboBoxSous_famille.setSelectedItem("-");

        ComboBox_marque.setSelectedItem("-");*/

    }

}
