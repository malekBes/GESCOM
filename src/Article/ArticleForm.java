/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Article;

import Client.Client;
import Client.ClientDao;
import Commercial.CommercialDao;
import Config.Commen_Proc;
import UploadImgServer.UploadTask;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.beans.PropertyChangeEvent;
import java.io.File;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Mlek
 */
public class ArticleForm extends javax.swing.JInternalFrame {

    HashMap<String, String> familleHashMap;
    HashMap<String, String> sousFamilleHashMap;
    HashMap<String, String> fournisseurHashMap;
    HashMap<String, String> marqueHashMap;
    HashMap<String, String> depotHashMap;

    ArticleDao daoArticle = new ArticleDao();
    ArrayList<String> listNomSte;

    /**
     * Creates new form ArticleForm
     */
    public ArticleForm() {
        initComponents();
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        txt_VIP.setText("1");
        txt_VIP.setEnabled(false);
        setComboBox();
        listNomSte = daoArticle.afficherArticle();
        this.addInternalFrameListener(new InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent e) {
                int reply = JOptionPane.showConfirmDialog(null, "Voulez vous vraiment quitter ?", "Quitter", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    dispose();
                }
            }
        });
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    }

    public void resetComboBox() {

        ComboBoxSous_famille.removeAllItems();
        ComboBoxSous_famille.addItem("-");
        ComboBox_famille.removeAllItems();
        ComboBox_famille.addItem("-");
        ComboBox_four.removeAllItems();
        ComboBox_four.addItem("-");
        ComboBox_marque.removeAllItems();
        ComboBox_marque.addItem("-");

    }

    public void setComboBox() {
        resetComboBox();
        familleComboBox();
        fournisseurComboBox();
        marqueComboBox();
        depotComboBox();
        typeArticleComboBox();
    }

    public void familleComboBox() {
        ArticleDao article = new ArticleDao();
        familleHashMap = article.listfamille(ComboBox_famille);
    }

    public void sousFamilleComboBox(String id) {
        ArticleDao article = new ArticleDao();
        sousFamilleHashMap = article.listSousFamille(ComboBoxSous_famille, id);
    }

    public void fournisseurComboBox() {
        ArticleDao article = new ArticleDao();
        fournisseurHashMap = article.listFournisseur(ComboBox_four);
    }

    public void depotComboBox() {
        ArticleDao article = new ArticleDao();
        depotHashMap = article.listDepot(ComboBox_Depot);

    }

    public void typeArticleComboBox() {
        ArticleDao article = new ArticleDao();
        article.listTypeArticle(ComboBoxTypeArticle);
    }

    public void marqueComboBox() {
        ArticleDao article = new ArticleDao();
        marqueHashMap = article.listMarque(ComboBox_marque);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ComboBox_famille = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ComboBoxSous_famille = new javax.swing.JComboBox<>();
        txt_ref = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ComboBox_marque = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ComboBox_four = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_tva = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_desgination = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_pays = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        CheckBox_importe = new javax.swing.JCheckBox();
        ComboBoxTypeArticle = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        ComboBox_Depot = new javax.swing.JComboBox<>();
        txt_VIP = new javax.swing.JTextField();
        CheckBox_VIP = new javax.swing.JCheckBox();
        txt_code_1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_code_2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_code_3 = new javax.swing.JTextField();
        txt_lien_img = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        save1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txt_qte = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_prix_achat = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_prix_vente = new javax.swing.JTextField();
        CheckBox_stock_negative = new javax.swing.JCheckBox();
        txt_marge = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        l = new javax.swing.JLabel();
        txt_code_barres = new javax.swing.JTextField();
        txt_detail_qte = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txt_searchArticle = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        update = new javax.swing.JButton();
        save = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Article");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Article"));

        ComboBox_famille.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBox_famille.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_familleItemStateChanged(evt);
            }
        });
        ComboBox_famille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_familleActionPerformed(evt);
            }
        });

        jLabel1.setText("Famille *");

        jLabel2.setText("Sous Famille *");

        jLabel3.setText("Référence *");

        ComboBoxSous_famille.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Fournisseur *");

        ComboBox_marque.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Marque *");

        ComboBox_four.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBox_four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_fourActionPerformed(evt);
            }
        });

        jLabel5.setText("TVA %");

        jLabel6.setText("Dépot");

        jLabel9.setText("Désignation *");

        jLabel13.setText("Pays d'origine");

        CheckBox_importe.setText("Importé");

        jLabel8.setText("Type Article (RFT/C...)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(CheckBox_importe)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ComboBoxTypeArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxTypeArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CheckBox_importe)
                .addContainerGap())
        );

        ComboBox_Depot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBox_Depot.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_DepotItemStateChanged(evt);
            }
        });
        ComboBox_Depot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_DepotActionPerformed(evt);
            }
        });

        CheckBox_VIP.setText("VIP");
        CheckBox_VIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox_VIPActionPerformed(evt);
            }
        });

        jLabel17.setText("Indice de vitesse *");

        jLabel18.setText("Indice de charge *");

        jLabel19.setText("Profil *");

        jLabel20.setText("Lien Image");

        save1.setText("Ajouter");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel20))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_VIP, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(CheckBox_VIP)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_tva)
                            .addComponent(ComboBox_four, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_pays)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboBox_Depot, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_lien_img, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(save1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_desgination)
                            .addComponent(ComboBox_famille, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboBoxSous_famille, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboBox_marque, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ref)
                            .addComponent(txt_code_1)
                            .addComponent(txt_code_2)
                            .addComponent(txt_code_3)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(ComboBox_famille)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxSous_famille))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_marque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ref, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_code_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_code_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_code_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_desgination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_four))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_tva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_Depot, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_pays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_lien_img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(txt_VIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CheckBox_VIP)))
                .addGap(10, 10, 10))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Stock"));
        jPanel2.setToolTipText("");

        jLabel10.setText("Quantité");

        txt_qte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_qteActionPerformed(evt);
            }
        });

        jLabel11.setText("Prix d'Achat");

        txt_prix_achat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_prix_achatActionPerformed(evt);
            }
        });

        jLabel12.setText("Prix Vente");

        txt_prix_vente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_prix_venteActionPerformed(evt);
            }
        });

        CheckBox_stock_negative.setText("Accepter Stock Négative");

        txt_marge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_margeActionPerformed(evt);
            }
        });

        jLabel14.setText("Marge");

        l.setText("Code Barres");

        txt_code_barres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_code_barresActionPerformed(evt);
            }
        });

        txt_detail_qte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_detail_qteActionPerformed(evt);
            }
        });

        jLabel16.setText("Detail Qte");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(l)
                    .addComponent(jLabel16))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CheckBox_stock_negative, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_prix_vente)
                    .addComponent(txt_prix_achat)
                    .addComponent(txt_qte)
                    .addComponent(txt_marge)
                    .addComponent(txt_code_barres)
                    .addComponent(txt_detail_qte))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_qte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_detail_qte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_prix_achat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_prix_vente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_marge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_code_barres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CheckBox_stock_negative)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recherche", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 51, 153))); // NOI18N

        txt_searchArticle.setBackground(new java.awt.Color(153, 204, 255));
        txt_searchArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchArticleActionPerformed(evt);
            }
        });
        txt_searchArticle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchArticleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchArticleKeyReleased(evt);
            }
        });

        jButton8.setText("Liste");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(165, 165, 165))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_searchArticle, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_searchArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 51, 153))); // NOI18N

        update.setText("Modifier");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        save.setText("Ajouter");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        delete.setText("Supprimer");
        delete.setToolTipText("delete the selected row");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jButton1.setText("Imprimer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(update)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(delete)
                    .addComponent(update)
                    .addComponent(clear)
                    .addComponent(jButton1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBox_fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_fourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_fourActionPerformed

    private void txt_qteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_qteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_qteActionPerformed

    private void txt_prix_achatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_prix_achatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_prix_achatActionPerformed

    private void txt_prix_venteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_prix_venteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_prix_venteActionPerformed

    private void txt_margeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_margeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_margeActionPerformed

    private void txt_code_barresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_code_barresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_code_barresActionPerformed

    private void ComboBox_familleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_familleItemStateChanged
        // TODO add your handling code here:


    }//GEN-LAST:event_ComboBox_familleItemStateChanged

    private void ComboBox_familleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_familleActionPerformed
        // TODO add your handling code here:
        try {

            String s = familleHashMap.get(ComboBox_famille.getSelectedItem().toString());
            sousFamilleComboBox(s);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_ComboBox_familleActionPerformed

    private void CheckBox_VIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox_VIPActionPerformed
        // TODO add your handling code here:
        if (CheckBox_VIP.isSelected()) {
            txt_VIP.setEnabled(true);
        } else {
            txt_VIP.setText("1");
            txt_VIP.setEnabled(false);

        }
    }//GEN-LAST:event_CheckBox_VIPActionPerformed

    private void txt_searchArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchArticleActionPerformed

    }//GEN-LAST:event_txt_searchArticleActionPerformed
    public void setFieldsByName(String table_click) {

        Article c = new Article();
        c = daoArticle.getArticleByName(table_click);
        if (c.getRef() == "0") {
            JOptionPane.showMessageDialog(null, " Verifier le Nom de la société ");
            // clearTxt();u
        } else {

            txt_ref.setText(c.getRef().toString());

            txt_code_1.setText(c.getCode_1().toString());
            txt_code_2.setText(c.getCode_2().toString());
            txt_code_3.setText(c.getCode_3().toString());

            txt_pays.setText(c.getPays_origine());
            txt_desgination.setText(c.getDesignation());
            txt_tva.setText(c.getTVA());
            if (!c.getId_depot().isEmpty()) {
                String ss = daoArticle.getNameItemById("depot", "nom", "id", c.getId_depot());
                ComboBox_Depot.setSelectedItem(ss);

            }
            // txt_depot.setText(c.getDepot());
            txt_qte.setText(String.valueOf(c.getQte()));
            txt_prix_achat.setText(String.valueOf(c.getPrix_achat()));
            txt_prix_vente.setText(String.valueOf(c.getPrix_vente()));
            txt_marge.setText(String.valueOf(c.getMarge()));
            txt_code_barres.setText(String.valueOf(c.getCode_barres()));

            if (c.getVIP().equals("1")) {
                CheckBox_VIP.setSelected(true);
                txt_VIP.setEnabled(true);
                txt_VIP.setText(String.valueOf(c.getVIP_pourcentage()));
            } else {
                CheckBox_VIP.setSelected(false);
                txt_VIP.setEnabled(false);
                txt_VIP.setText(String.valueOf(c.getVIP_pourcentage()));

            }
            if (c.getIsImporte().equals("1")) {
                CheckBox_importe.setSelected(true);
            } else {
                CheckBox_importe.setSelected(false);
            }
            if (c.getStock_negative() == 1) {
                CheckBox_stock_negative.setSelected(true);
            } else {
                CheckBox_stock_negative.setSelected(false);
            }
            //String s = ComboBox_four.getSelectedItem().toString();

            if (!c.getId_fournisseur().isEmpty()) {
                String ss = daoArticle.getNameItemById("fournisseur", "nom", "id", c.getId_fournisseur());
                ComboBox_four.setSelectedItem(ss);

            }

            if (!c.getId_famille().isEmpty()) {
                String ss = daoArticle.getNameItemById("famille_produit", "famille", "id", c.getId_famille());

                ComboBox_famille.setSelectedItem(ss);
            }

            if (!c.getId_sous_famille().isEmpty()) {
                String ss = daoArticle.getNameItemById("sous_famille", "sous_famille", "id", c.getId_sous_famille());

                ComboBoxSous_famille.setSelectedItem(ss);
            }
            if (!c.getMarque().isEmpty()) {
                String ss = daoArticle.getNameItemById("marque_produit", "marque", "id", c.getMarque());

                ComboBox_marque.setSelectedItem(ss);
            }
            if (c.getType_article() != null) {
                if (!c.getType_article().isEmpty()) {
                    ComboBoxTypeArticle.setSelectedItem(c.getType_article());
                }
            }

        }
    }


    private void txt_searchArticleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchArticleKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == evt.VK_ENTER) {
            setFieldsByName(txt_searchArticle.getText());

        }
    }//GEN-LAST:event_txt_searchArticleKeyPressed

    private void txt_searchArticleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchArticleKeyReleased
        //  daoArticle.searchClient(client_table, txt_search.getText());

        if (evt.getKeyCode() == evt.VK_BACK_SPACE || evt.getKeyCode() == evt.VK_DELETE) {

        } else {
            String to_check = txt_searchArticle.getText().toLowerCase();
            int to_check_len = to_check.length();
            for (String data : listNomSte) {
                data = data.toLowerCase();
                String check_from_data = "";
                for (int i = 0; i < to_check_len; i++) {
                    if (to_check_len <= data.length()) {
                        check_from_data = check_from_data + data.charAt(i);
                    }
                }
                //System.out.print(check_from_data);
                if (check_from_data.contains(to_check)) {
                    //System.out.print("Found");
                    txt_searchArticle.setText(data);
                    txt_searchArticle.setSelectionStart(to_check_len);
                    txt_searchArticle.setSelectionEnd(data.length());
                    break;
                }
            }
        }
    }//GEN-LAST:event_txt_searchArticleKeyReleased
    private Article setArticleFromEditText() {
        Article r = new Article();

        try {
            if (!txt_ref.getText().isEmpty()) {
                r.setRef(txt_ref.getText());
            } else {
                r.setRef("");
                return null;
            }

            if (!txt_code_1.getText().isEmpty()) {
                r.setCode_1(txt_code_1.getText());
            } else {
                r.setCode_1("");
                return null;
            }

            if (!txt_code_2.getText().isEmpty()) {
                r.setCode_2(txt_code_2.getText());
            } else {
                r.setCode_2("");
                return null;
            }

            if (!txt_code_3.getText().isEmpty()) {
                r.setCode_3(txt_code_3.getText());
            } else {
                r.setCode_3("");
                return null;
            }

            if (!txt_pays.getText().isEmpty()) {
                r.setPays_origine(txt_pays.getText());
            } else {
                r.setPays_origine("");
            }

            if (!txt_desgination.getText().isEmpty()) {
                r.setDesignation(txt_desgination.getText());
            } else {
                r.setDesignation("");
                return null;
            }

            if (!txt_tva.getText().isEmpty()) {
                r.setTVA(txt_tva.getText());
            } else {
                r.setTVA("0");
            }

            if (!txt_detail_qte.getText().isEmpty()) {
                r.setDetail_qte(Integer.valueOf(txt_detail_qte.getText()));
            } else {
                r.setDetail_qte(0);
            }

            /*  if (!txt_depot.getText().isEmpty()) {
                r.setDepot(txt_depot.getText());
            } else {
                r.setDepot("");
            }*/
            String depot = ComboBox_Depot.getSelectedItem().toString();
            if (!depot.equals("-")) {
                String ss = daoArticle.getNameItemById("depot", "id", "nom", depot);
                r.setId_depot(ss);
            } else {
                r.setId_depot("0");
                // return null;
            }

            if (!txt_qte.getText().isEmpty()) {
                r.setQte(Integer.valueOf(txt_qte.getText()));
            } else {
                r.setQte(0);
            }

            if (!txt_prix_achat.getText().isEmpty()) {
                r.setPrix_achat(Double.valueOf(txt_prix_achat.getText()));
            } else {
                r.setPrix_achat(Double.valueOf(0));
            }

            if (!txt_prix_vente.getText().isEmpty()) {
                r.setPrix_vente(Double.valueOf(txt_prix_vente.getText()));
            } else {
                r.setPrix_vente(Double.valueOf(0));
            }

            if (!txt_marge.getText().isEmpty()) {
                r.setMarge(Double.valueOf(txt_marge.getText()));
            } else {
                r.setMarge(Double.valueOf(0));
            }

            if (!txt_code_barres.getText().isEmpty()) {
                r.setCode_barres(txt_code_barres.getText());
            } else {
                r.setCode_barres("");
            }

            if (!ComboBoxTypeArticle.getSelectedItem().toString().equals("-")) {
                r.setType_article(ComboBoxTypeArticle.getSelectedItem().toString());
                // r.setVIP_pourcentage(Double.valueOf(txt_VIP.getText()));

            }
            if (CheckBox_VIP.isSelected()) {
                r.setVIP("1");
            } else {
                r.setVIP("0");
            }

            if (CheckBox_importe.isSelected()) {
                r.setIsImporte("1");
            } else {
                r.setIsImporte("0");

            }

            if (CheckBox_stock_negative.isSelected()) {
                r.setStock_negative(1);
            } else {
                r.setStock_negative(0);

            }
            String marque = ComboBox_marque.getSelectedItem().toString();
            if (!marque.equals("-")) {
                String ss = daoArticle.getNameItemById("marque_produit", "id", "marque", marque);
                r.setMarque(ss);
            } else {

                r.setMarque("0");
                return null;

            }

            String f = ComboBox_four.getSelectedItem().toString();
            if (!f.equals("-")) {
                String ss = daoArticle.getNameItemById("fournisseur", "id", "nom", f);
                r.setId_fournisseur(ss);
            } else {
                r.setId_fournisseur("0");
                return null;

            }

            String fm = ComboBox_famille.getSelectedItem().toString();

            if (!fm.equals("-")) {
                String ss = daoArticle.getNameItemById("famille_produit", "id", "famille", fm);
                r.setId_famille(ss);
            } else {
                r.setId_famille("0");
                return null;

            }

            String sfm = ComboBoxSous_famille.getSelectedItem().toString();
            if (!sfm.equals("-")) {
                String ss = daoArticle.getNameItemById("sous_famille", "id", "sous_famille", sfm);
                r.setId_sous_famille(ss);
            } else {
                r.setId_sous_famille("0");
                //   return null;

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println(e);

        }

        return r;
    }
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        Article s = setArticleFromEditText();
        if (s == null) {
            JOptionPane.showMessageDialog(null, "Verifier les champs obligatoire !");
        } else {
            daoArticle.updateArticle(s);
        }

        // update_table();
    }//GEN-LAST:event_updateActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
            Article s = setArticleFromEditText();
            if (s == null) {
                JOptionPane.showMessageDialog(null, "Verifier les champs obligatoire !");
            } else {
                daoArticle.ajouterArticle(s);
                listNomSte = daoArticle.afficherArticle();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error in ClientFrom/Ajouter_btn :  " + e);
        } finally {
            try {

            } catch (Exception ex) {
                Logger.getLogger(ArticleDao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // update_table();
    }//GEN-LAST:event_saveActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed

        clearTxt();

    }//GEN-LAST:event_clearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

        daoArticle.deleteArticle(txt_ref.getText());
        listNomSte = daoArticle.afficherArticle();
        //update_table();
        clearTxt();
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MessageFormat header = new MessageFormat("Report Print");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {
            // client_table.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_detail_qteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_detail_qteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_detail_qteActionPerformed

    private void ComboBox_DepotItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_DepotItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_DepotItemStateChanged

    private void ComboBox_DepotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_DepotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_DepotActionPerformed
    JButton jbRecherchearticle;
    JButton jbtValiderarticle;
    JFrame frameListeClient;

    JTextField jtxtRecherchearticle;
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        Vector<String> columnNames = new Vector<String>();
        columnNames.add("id");
        columnNames.add("ref");
        columnNames.add("designation");
        columnNames.add("Prix Unitaire");
        columnNames.add("Qte");
        columnNames.add("Marge");
        columnNames.add("Réservé");

        ClientDao clientDao = new ClientDao();
        Vector<Vector<Object>> data1;
        if (!Commen_Proc.isRemote) {
            data1 = clientDao.afficherListClient();
        } else {
            data1 = null;
        }

        ArticleDao articleDao = new ArticleDao();
        data1 = articleDao.afficherListeArticle();
        DefaultTableModel model = new DefaultTableModel(data1, columnNames);
        JTable jTable = new JTable(model);

        TableRowSorter<TableModel> rowSorter
                = new TableRowSorter<>(jTable.getModel());

        JTextField jtfFilter = new JTextField();

        jbtValiderarticle = new JButton("Valider");
        jbRecherchearticle = new JButton("Recherche");
        jtxtRecherchearticle = new JTextField(30);
//jTable.setRowSorter(rowSorter);
        JPanel Homepanel = new JPanel(new BorderLayout());

        JPanel panel = new JPanel(new BorderLayout());
        JPanel panelbtn = new JPanel(new FlowLayout());

        panelbtn.add(jbtValiderarticle, BorderLayout.SOUTH);
        panelbtn.add(jbRecherchearticle, BorderLayout.NORTH);
        panelbtn.add(jtxtRecherchearticle, BorderLayout.NORTH);

        panel.add(panelbtn, BorderLayout.SOUTH);
        jbRecherchearticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                ArticleDao articleDao = new ArticleDao();
                Vector<Vector<Object>> data1 = articleDao.afficherListeArticle(jtxtRecherchearticle.getText(), "");

                DefaultTableModel model = new DefaultTableModel(data1, columnNames);
                jTable.setModel(model);
            }
        });

        Homepanel.add(panel, BorderLayout.SOUTH);

        Homepanel.add(
                new JScrollPane(jTable), BorderLayout.CENTER);

        jtfFilter.getDocument()
                .addDocumentListener(new DocumentListener() {

                    @Override
                    public void insertUpdate(DocumentEvent e
                    ) {
                        String text = jtfFilter.getText();

                        if (text.trim().length() == 0) {
                            rowSorter.setRowFilter(null);
                        } else {
                            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                        }
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e
                    ) {
                        String text = jtfFilter.getText();

                        if (text.trim().length() == 0) {
                            rowSorter.setRowFilter(null);
                        } else {
                            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                        }
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e
                    ) {
                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }

                }
                );

        frameListeClient = new JFrame("Liste Article");
        frameListeClient.add(Homepanel);
        frameListeClient.pack();
        frameListeClient.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        frameListeClient.setLocationRelativeTo(null);
        frameListeClient.setVisible(true);
        jbtValiderarticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String ref = jTable.getModel().getValueAt(jTable.getSelectedRow(), 1).toString();

                setFieldsByName(ref);

                frameListeClient.dispose();
            }
        });
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed
    private JProgressBar progressBar = new JProgressBar(0, 100);

 
    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed

        String host = "192.168.26.145";
        int port = Integer.parseInt("21");
        String username = "knowageftp";
        String password = "knowageftp";
        String uploadPath = "/logs";
        
        String filePath = txt_lien_img.getText();

        File uploadFile = new File(filePath);
        progressBar.setValue(0);
        UploadTask task = new UploadTask(host, port, username, password,
                uploadPath, uploadFile);
    
        task.execute();
// TODO add your handling code here:
    }//GEN-LAST:event_save1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBox_VIP;
    private javax.swing.JCheckBox CheckBox_importe;
    private javax.swing.JCheckBox CheckBox_stock_negative;
    private javax.swing.JComboBox<String> ComboBoxSous_famille;
    private javax.swing.JComboBox<String> ComboBoxTypeArticle;
    private javax.swing.JComboBox<String> ComboBox_Depot;
    private javax.swing.JComboBox<String> ComboBox_famille;
    private javax.swing.JComboBox<String> ComboBox_four;
    private javax.swing.JComboBox<String> ComboBox_marque;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel l;
    private javax.swing.JButton save;
    private javax.swing.JButton save1;
    private javax.swing.JTextField txt_VIP;
    private javax.swing.JTextField txt_code_1;
    private javax.swing.JTextField txt_code_2;
    private javax.swing.JTextField txt_code_3;
    private javax.swing.JTextField txt_code_barres;
    private javax.swing.JTextField txt_desgination;
    private javax.swing.JTextField txt_detail_qte;
    private javax.swing.JTextField txt_lien_img;
    private javax.swing.JTextField txt_marge;
    private javax.swing.JTextField txt_pays;
    private javax.swing.JTextField txt_prix_achat;
    private javax.swing.JTextField txt_prix_vente;
    private javax.swing.JTextField txt_qte;
    private javax.swing.JTextField txt_ref;
    private javax.swing.JTextField txt_searchArticle;
    private javax.swing.JTextField txt_tva;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void clearTxt() {
        txt_ref.setText("");
        txt_code_1.setText("");
        txt_code_2.setText("");
        txt_code_3.setText("");

        txt_detail_qte.setText("");
        txt_pays.setText("");
        txt_desgination.setText("");
        txt_tva.setText("");
        //txt_depot.setText("");
        txt_qte.setText("");
        txt_prix_achat.setText("");
        txt_prix_vente.setText("");
        txt_marge.setText("");
        txt_code_barres.setText("");

        CheckBox_VIP.setSelected(false);
        // txt_VIP.setEnabled(true);
        // txt_VIP.setText("");

        CheckBox_importe.setSelected(false);

        CheckBox_stock_negative.setSelected(false);

        //String s = ComboBox_four.getSelectedItem().toString();
        ComboBox_four.setSelectedItem("-");
        ComboBox_Depot.setSelectedItem("-");

        ComboBox_famille.setSelectedItem("-");

        ComboBoxSous_famille.setSelectedItem("-");

        ComboBox_marque.setSelectedItem("-");

    }

}
